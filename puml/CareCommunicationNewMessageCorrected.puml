@startuml CCCorrectMessage
'layout
skinparam class {
    BackgroundColor White
    BorderColor Black
    ArrowColor Black
  }
hide circle
hide empty members
skinparam SameClassWidth true
skinparam Ranksep 10


'title
title Simplified example: New message Corrected

'Message 1: New message
package "Message 1: New message" as new <<Frame>>{
    class "Bundle 1" as newB {
        Bundle.id = BUN1
        ...
    }
    class "MessageHeader 1" as newMH{
        MessageHeader.id = MHID1
        ...
    }
    class "Sender Organization 1" as newSOrg{
        ...
    }
    class "Reciver Organization 1" as newROrg{
        ...
    }
    class "Communication 1" as newCom{
        Communication.status = "unknown"
        Communication.category = "medicine"
        Communication.payload.contentString = "Question regarding medicine..."
        Communication.payload.payloadDateTimeExtension = 2021-12-01T12:34:56Z
        Communication.payload.payloadAuthorExtension = Practitioner/Prac1
        ...
    }
    class "Encounter 1" as newENC{
        Encounter.status = "in-progress"
        Encounter.class = "IMP"
        ...
    }
    class "Patient 1" as newPT{
        ...
    }
    class "Practitioner 1" as newPrac{
        Practitioner.identifier = Prac1
        ...
    }
    class "PractitionerRole 1" as newPracR{
        ...
    }
    class "Provenance 1" as newPRO{
        Provenance.target = MessageHeader/MHID1
        Provenance.activity = "new-messsage"
        Provenance.agent.who = "Regional Organization"
        Provenance.entity.role = "source"
        Provenance.entity.what = NA
        ...
    }

newB -[hidden]- newMH
newMH -[hidden]- newSOrg
newSOrg-[hidden]-newROrg
newROrg-[hidden]-newCom
newCom -[hidden]- newENC
newENC-[hidden]-newPT
newPT-[hidden]-newPrac
newPrac-[hidden]-newPracR
newPracR-[hidden]-newPRO



}

'Message 2: corrected message
package "Message 2: Corrected message" as error <<Frame>>{
    class "Bundle 2" as errorB {
        Bundle.id = BUN2
        ...
    }
    class "MessageHeader 2" as errorMH{
        MessageHeader.id = MHID2
        ...
    }
    class "Sender Organization 2" as errorSOrg{
        ...
    }
    class "Reciver Organization 2" as errorROrg{
        ...
    }
    class "Communication 2" as newerrorCom{
        Communication.status = "unknown"
        Communication.category = "medicine"
        Communication.payload[1].contentString = "Corrected question regarding medicine.."
        Communication.payload[1].payloadDateTimeExtension = 2021-12-01T12:45:01Z
        Communication.payload[1].payloadAuthorExtension = Practitioner/Prac1
        ...
    }
    class "Encounter 1" as newerrorENC{
        Encounter.status = "in-progress"
        Encounter.class = "IMP"
        ...
    }
    class "Patient 1" as newerrorPT{
        ...
    }
    class "Practitioner 1" as newerrorPrac{
        Practitioner.identifier = Prac1
        ...
    }
    class "PractitionerRole 1" as newerrorPracR{
        ...
    }
    class "Provenance 1" as newerrorPRO{
        Provenance.target = MessageHeader/MHID1
        Provenance.activity = "new-messsage"
        Provenance.agent.who = "Regional Organization"
        Provenance.entity.role = "source"
        Provenance.entity.what = NA
        ...
    }
    class "Provenance 2" as errorPRO{
        Provenance.target = MessageHeader/MHID2
        Provenance.activity = "revision"
        Provenance.agent.who = "Regional Organization"
        Provenance.entity.role = "modified-message"
        Provenance.entity.what.reference = MessageHeader/MHID1
        ...
    }

errorB -[hidden]- errorMH
errorMH -[hidden]- errorSOrg
errorSOrg-[hidden]-errorROrg
errorROrg-[hidden]-newerrorCom
newerrorCom -[hidden]- newerrorENC
newerrorENC-[hidden]-newerrorPT
newerrorPT-[hidden]-newerrorPrac
newerrorPrac-[hidden]-newerrorPracR
newerrorPracR-[hidden]-newerrorPRO
newerrorPRO-[hidden]-errorPRO



}

' pile mellem de to beskeder
' admit --> finished


@enduml






