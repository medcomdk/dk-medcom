@startuml HNAdmitFinish

'layout
skinparam class {
    BackgroundColor White
    BorderColor Black
    ArrowColor Black
  }
hide circle
hide empty members
skinparam SameClassWidth true
skinparam Ranksep 10


'title
title Simplified example: Admit and finish inpatient

'Message 1: Admit inpatient
package "Message 1: Admit inpatient" as admit <<Frame>>{
    class "Bundle 1" as admitB {
        Bundle.id = BUN1
        ...
    }
    class "MessageHeader 1" as admitMH{
        MessageHeader.id = MHID1
        ...
    }
    class "Sender Organization 1" as admitSOrg{
        ...
    }
    class "Reciver Organization 1" as admitROrg{
        ...
    }
    class "Encounter 1" as admitENC{
        Encounter.status = "in-progress"
        Encounter.class = "IMP"
        ...
    }
    class "Patient 1" as admitPT{
        ...
    }
    class "ServiceProvider Organization 1" as admitSPOrg{
        ...
    }
    class "Provenance 1" as admitPRO{
        Provenance.target = MessageHeader/MHID1
        Provenance.activity = "admit-inpatient"
        Provenance.entity.role = "source"
        Provenance.entity.what = NA
        ...
    }

admitB -[hidden]- admitMH
admitMH -[hidden]- admitSOrg
admitSOrg-[hidden]-admitROrg
admitROrg-[hidden]-admitENC
admitENC-[hidden]-admitPT
admitPT-[hidden]-admitSPOrg
admitSPOrg-[hidden]-admitPRO



}

'Message 2: Finished inpatient
package "Message 2: Finished inpatient" as finished <<Frame>> {
    class "Bundle 2" as finishedB {
        Bundle.id = BUN2
        ...
    }
    class "MessageHeader 2" as finishedMH{
        MessageHeader.id = MHID2
        ...
    }
    class "Sender Organization 2" as finishedSOrg{
        ...
    }
    class "Reciver Organization 2" as finishedROrg{
        ...
    }
    class "Encounter 2" as finishedENC{
        Encounter.status = "finished"
        Encounter.class = "IMP"
        ...
    }
    class "Patient 2" as finishedPT{
        ...
    }
    class "ServiceProvider Organization 2" as finishedSPOrg{
        ...
    }
    class "Provenance 1" as admitfinishedPRO{
        Provenance.target = MessageHeader/MHID1
        Provenance.activity = "admit-inpatient"
        Provenance.entity.role = "source"
        Provenance.entity.what = NA
        ...
    }
    class "Provenance 2" as finishedPRO{
        Provenance.target = MessageHeader/MHID2
        Provenance.activity = "discharge-imp-home"
        Provenance.entity.role = "derivation"
        Provenance.entity.what = MessageHeader/MHID1
        ...
    }
finishedB-[hidden]-finishedMH
finishedMH-[hidden]-finishedSOrg
finishedSOrg-[hidden]-finishedROrg
finishedROrg-[hidden]-finishedENC
finishedENC-[hidden]-finishedPT
finishedPT-[hidden]-finishedSPOrg
finishedSPOrg-[hidden]-admitfinishedPRO
admitfinishedPRO-[hidden]-finishedPRO

}

' pile mellem de to beskeder
' admit --> finished


@enduml

